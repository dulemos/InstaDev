{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/codenation/react-16/src/containers/Stories/Stories.jsx\";\nimport React, { useState } from \"react\"; // import Story from \"../../components/Story\";\n\nimport \"./Stories.scss\";\nimport Story from \"../../components/Story\";\n\nconst Stories = ({\n  stories,\n  getUserHandler\n}) => {\n  const [showStory, toggleShowStory] = useState(false);\n  const [selectedStory, setSelectedHistory] = useState({});\n  const [selectedProfile, setSelectedProfile] = useState({});\n\n  const findStoryById = id => stories.find(story => story.id === id);\n\n  let handleClick = story => {\n    const foundStory = findStoryById(story.id);\n    const profileData = getUserHandler(story.userId);\n    setSelectedProfile(profileData);\n    setSelectedHistory(foundStory);\n    toggleShowStory(!showStory);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"stories\",\n    \"data-testid\": \"stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"user__thumb user__thumb--hasNew\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user__thumb__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://viniciusvinna.netlify.app/assets//api-instagram/profiles/black-panther/black-panther-profile.jpg\",\n    alt: \"black panther\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }))), stories.map((story, index) => {\n    const profileData = getUserHandler(story.userId);\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: story.id,\n      onClick: () => handleClick(story),\n      className: `user__thumb ${index == 0 && 'user__thumb--hasNew'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user__thumb__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: profileData.avatar,\n      alt: profileData.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    })));\n  }))), showStory && /*#__PURE__*/React.createElement(Story, {\n    story: {\n      \"videoUrl\": \"https://viniciusvinna.netlify.app/assets/api-instagram/profiles/black-panther/black-panther-stories.mp4\"\n    },\n    user: \"blackPanther\",\n    handleClose: () => toggleShowStory(!showStory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Stories;","map":{"version":3,"sources":["/home/eduardo/codenation/react-16/src/containers/Stories/Stories.jsx"],"names":["React","useState","Story","Stories","stories","getUserHandler","showStory","toggleShowStory","selectedStory","setSelectedHistory","selectedProfile","setSelectedProfile","findStoryById","id","find","story","handleClick","foundStory","profileData","userId","map","index","avatar","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AAEA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAiC;AAE/C,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BN,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACO,aAAD,EAAgBC,kBAAhB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMW,aAAa,GAAGC,EAAE,IAAIT,OAAO,CAACU,IAAR,CAAaC,KAAK,IAAIA,KAAK,CAACF,EAAN,KAAaA,EAAnC,CAA5B;;AAEA,MAAIG,WAAW,GAAGD,KAAK,IAAI;AAEzB,UAAME,UAAU,GAAGL,aAAa,CAACG,KAAK,CAACF,EAAP,CAAhC;AACA,UAAMK,WAAW,GAAGb,cAAc,CAACU,KAAK,CAACI,MAAP,CAAlC;AAEAR,IAAAA,kBAAkB,CAACO,WAAD,CAAlB;AACAT,IAAAA,kBAAkB,CAACQ,UAAD,CAAlB;AACAV,IAAAA,eAAe,CAAC,CAACD,SAAF,CAAf;AACD,GARD;;AAYA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAA6B,mBAAY,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,iCAAlB;AAAoD,IAAA,OAAO,EAAEU,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAC,0GADN;AAEE,IAAA,GAAG,EAAC,eAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAUGZ,OAAO,CAACgB,GAAR,CAAY,CAACL,KAAD,EAAQM,KAAR,KAAkB;AAC7B,UAAMH,WAAW,GAAGb,cAAc,CAACU,KAAK,CAACI,MAAP,CAAlC;AACA,wBACE;AAAQ,MAAA,GAAG,EAAEJ,KAAK,CAACF,EAAnB;AAAuB,MAAA,OAAO,EAAE,MAAMG,WAAW,CAACD,KAAD,CAAjD;AAA0D,MAAA,SAAS,EAAG,eAAcM,KAAK,IAAI,CAAT,IAAc,qBAAsB,EAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEH,WAAW,CAACI,MAAtB;AAA8B,MAAA,GAAG,EAAEJ,WAAW,CAACK,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD,GATA,CAVH,CADF,CADF,EAyBGjB,SAAS,iBACR,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AACL,kBAAY;AADP,KADT;AAGK,IAAA,IAAI,EAAC,cAHV;AAGyB,IAAA,WAAW,EAAG,MAAMC,eAAe,CAAC,CAACD,SAAF,CAH5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,CADF;AAkCD,CAtDD;;AAwDA,eAAeH,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\n// import Story from \"../../components/Story\";\n\nimport \"./Stories.scss\";\nimport Story from \"../../components/Story\"\n\nconst Stories = ({ stories, getUserHandler }) => {\n\n  const [showStory, toggleShowStory] = useState(false)\n  const [selectedStory, setSelectedHistory] = useState({});\n  const [selectedProfile, setSelectedProfile] = useState({});\n\n  const findStoryById = id => stories.find(story => story.id === id);\n\n  let handleClick = story => {\n\n    const foundStory = findStoryById(story.id);\n    const profileData = getUserHandler(story.userId);\n\n    setSelectedProfile(profileData);\n    setSelectedHistory(foundStory);\n    toggleShowStory(!showStory);\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <section className=\"stories\" data-testid=\"stories\">\n        <div className=\"container\">\n          <button className=\"user__thumb user__thumb--hasNew\" onClick={handleClick}>\n            <div className=\"user__thumb__wrapper\">\n              <img\n                src=\"https://viniciusvinna.netlify.app/assets//api-instagram/profiles/black-panther/black-panther-profile.jpg\"\n                alt=\"black panther\"\n              />\n            </div>\n          </button>\n\n          {stories.map((story, index) => {\n            const profileData = getUserHandler(story.userId);\n            return(\n              <button key={story.id} onClick={() => handleClick(story)} className={`user__thumb ${index == 0 && 'user__thumb--hasNew'}`}>\n                <div className=\"user__thumb__wrapper\">\n                  <img src={profileData.avatar} alt={profileData.name} />\n                </div>\n              </button>\n            )\n          })}\n        </div>\n      </section>\n\n      {showStory && (\n        <Story \n          story={{\n            \"videoUrl\": \"https://viniciusvinna.netlify.app/assets/api-instagram/profiles/black-panther/black-panther-stories.mp4\"\n          }} user=\"blackPanther\" handleClose={ () => toggleShowStory(!showStory)} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Stories;\n"]},"metadata":{},"sourceType":"module"}