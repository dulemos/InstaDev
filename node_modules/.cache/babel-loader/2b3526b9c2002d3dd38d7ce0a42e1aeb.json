{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/codenation/react-16/src/routes/FeedRoute/FeedRoute.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Stories from \"../../containers/Stories\";\nimport Loading from \"../../components/Loading\";\nimport Posts from \"../../containers/Posts\";\nimport \"./FeedRoute.scss\";\n\nconst FeedRoute = () => {\n  const [load, setLoad] = useState(true);\n  const [stories, setStories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n\n  const getUserPostById = postUserId => users.find(user => postUserId === user.id);\n\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\").then(res => res.json()).then(data => {\n      setUsers(data);\n    });\n  }, []);\n  useEffect(() => {\n    const postsFetched = [];\n    users.forEach(user => {\n      fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${user.id}/posts`).then(res => res.json()).then(data => {\n        if (data.length > 0) {\n          postsFetched.push(data);\n        }\n      });\n    });\n    setPosts(postsFetched);\n  }, [users]);\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/stories\").then(res => res.json()).then(data => {\n      setStories(data);\n    });\n  }, [users]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"feed-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stories, {\n    stories: stories,\n    getUserHandler: getUserPostById,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), users.length === 0 ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(Posts, {\n    posts: posts,\n    getUserHandler: getUserPostById,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 43\n    }\n  }));\n};\n\nexport default FeedRoute;","map":{"version":3,"sources":["/home/eduardo/codenation/react-16/src/routes/FeedRoute/FeedRoute.jsx"],"names":["React","useState","useEffect","Stories","Loading","Posts","FeedRoute","load","setLoad","stories","setStories","users","setUsers","posts","setPosts","getUserPostById","postUserId","find","user","id","fetch","then","res","json","data","postsFetched","forEach","length","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,eAAe,GAAGC,UAAU,IAAIL,KAAK,CAACM,IAAN,CAAWC,IAAI,IAAIF,UAAU,KAAKE,IAAI,CAACC,EAAvC,CAAtC;;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAAC,0DAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdZ,MAAAA,QAAQ,CAACY,IAAD,CAAR;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,YAAY,GAAG,EAArB;AACAd,IAAAA,KAAK,CAACe,OAAN,CAAeR,IAAD,IAAU;AACtBE,MAAAA,KAAK,CACF,4DAA2DF,IAAI,CAACC,EAAG,QADjE,CAAL,CAGGE,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd,YAAIA,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACnBF,UAAAA,YAAY,CAACG,IAAb,CAAkBJ,IAAlB;AACD;AACF,OARH;AASD,KAVD;AAWAV,IAAAA,QAAQ,CAACW,YAAD,CAAR;AACD,GAdQ,EAcN,CAACd,KAAD,CAdM,CAAT;AAgBAT,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdd,MAAAA,UAAU,CAACc,IAAD,CAAV;AACD,KAJH;AAKD,GANQ,EAMN,CAACb,KAAD,CANM,CAAT;AAQA,sBACE;AAAK,mBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACA,IAAA,OAAO,EAAEF,OADT;AAEA,IAAA,cAAc,EAAEM,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGJ,KAAK,CAACgB,MAAN,KAAiB,CAAjB,gBAAqB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,gBAAmC,oBAAC,KAAD;AACpC,IAAA,KAAK,EAAId,KAD2B;AAEpC,IAAA,cAAc,EAAIE,eAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALtC,CADF;AAYD,CApDD;;AAsDA,eAAeT,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Stories from \"../../containers/Stories\";\nimport Loading from \"../../components/Loading\";\n\nimport Posts from \"../../containers/Posts\";\n\nimport \"./FeedRoute.scss\";\n\nconst FeedRoute = () => {\n  const [load, setLoad] = useState(true);\n  const [stories, setStories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n\n  const getUserPostById = postUserId => users.find(user => postUserId === user.id)\n\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\")\n      .then((res) => res.json())\n      .then((data) => {\n        setUsers(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const postsFetched = [];\n    users.forEach((user) => {\n      fetch(\n        `https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${user.id}/posts`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.length > 0) {\n            postsFetched.push(data);\n          }\n        });\n    });\n    setPosts(postsFetched);\n  }, [users]);\n\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/stories\")\n      .then((res) => res.json())\n      .then((data) => {\n        setStories(data);\n      });\n  }, [users]);\n\n  return (\n    <div data-testid=\"feed-route\">\n      <Stories \n      stories={stories}\n      getUserHandler={getUserPostById}\n      />\n      {users.length === 0 ? <Loading /> : <Posts \n      posts = {posts}\n      getUserHandler = {getUserPostById}\n      />}\n    </div>\n  );\n};\n\nexport default FeedRoute;\n"]},"metadata":{},"sourceType":"module"}